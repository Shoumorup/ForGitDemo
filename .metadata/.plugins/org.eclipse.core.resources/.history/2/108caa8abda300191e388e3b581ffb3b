package com.visa.training.lambdas;

import java.util.Arrays;

@FunctionalInterface
interface SortChecker{
	int eChecker(String s1,String s2);
}

@FunctionalInterface
interface TwoStringPredicate{
	int betterTwoStringPredicate(String s1,String s2);
}

public class StringUtils {
	
	public static int eChecker(String s1,String s2)
	{
		return ((s1.contains("e")&& !s2.contains("e"))?-1:1);
	}
	
	public static String betterString(String s1,String s2,TwoStringPredicate t) 
	{
		return (t.betterTwoStringPredicate(s1, s2)>0?s1:s2);
	}
	
	public static void main(String[] args) {
		String words[]= {"this","is","a","set","of","eaining","words","to","eort","arrays"};
	    	    
	    Arrays.sort(words,(s1,s2)->s1.length()-s2.length());
	    System.out.println("Array after sorting in order of length:"+Arrays.asList(words));
	    
	    Arrays.sort(words,(s1,s2)->s2.length()-s1.length());
	    System.out.println("Array after sorting in order of reverse length:"+Arrays.asList(words));
	    
	    Arrays.sort(words,(s1,s2)->s1.charAt(0)-s2.charAt(0));
	    System.out.println("Array after sorting in order of first character:"+Arrays.asList(words));
	    
	    Arrays.sort(words,StringUtils::eChecker);
	    System.out.println("Array after sorting in order of first character being e or not:"+Arrays.asList(words));
	
	    System.out.println(StringUtils.betterString(words[0],words[1],(s1,s2)->s1.length()-s2.length()));
	}
}
